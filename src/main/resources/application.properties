spring.application.name= microservice-item
server.port=8002

#Esta configuracion de ribbon se usaba para el desarrollo del ejemplo, cuando se utiliza eureka ya no son necesarios porque cada host se regista
#alli con el spring.application.name
#microservice-item.ribbon.listOfServers=localhost:51773,localhost:8090

#La url del servidor de eureka solo es necesario declara explisitamente cuando este se encuentra corriendo en otra maquina.
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

#En el caso que la aplicacion corra con docker, se debe de utilizar la siguiente url (http://192.168.99.100:8761/), el valor 192.168.99.100 puede
#cambiar de acuerdo a la instalacion/configuraciones en cada maquina, para obtenerlo correr el siguiente comando en docker -> docker-machine ip

#eureka.client.service-url.defaultZone=http://192.168.99.100:8761/eureka/

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=false

#Configuracion de Time-Out
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds= 60000
ribbon.ConnectTimeout= 3000
ribbon.ReadTimeout= 60000

